{"version":3,"sources":["app.js"],"names":["container","document","getElementById","ajax","XMLHttpRequest","content","createElement","NEWS_URL","CONTENT_URL","getData","url","open","send","JSON","parse","response","newsFeed","newsList","push","i","id","title","comments_count","innerHTML","join","ul","newsDetail","location","hash","substring","newsContent","replace","router","routePath","window","addEventListener"],"mappings":"AAAA,IAAMA,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlB;AACA,IAAMC,IAAI,GAAG,IAAIC,cAAJ,EAAb;AACA,IAAMC,OAAO,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAhB;AACA,IAAMC,QAAQ,GAAG,sCAAjB;AACA,IAAMC,WAAW,GAAG,wCAApB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAAM;AAC1BP,EAAAA,IAAI,CAACQ,IAAL,CAAU,KAAV,EAAiBD,GAAjB,EAAsB,KAAtB;AACAP,EAAAA,IAAI,CAACS,IAAL,GAFoB,CAEP;;AAEb,SAAOC,IAAI,CAACC,KAAL,CAAWX,IAAI,CAACY,QAAhB,CAAP;AACD;;AAED,SAASC,QAAT,GAAoB;AAClB,MAAMA,QAAQ,GAAGP,OAAO,CAACF,QAAD,CAAxB;AACA,MAAMU,QAAQ,GAAG,EAAjB;AAEAA,EAAAA,QAAQ,CAACC,IAAT,CAAc,MAAd;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AAAK;AAChC;AACEF,IAAAA,QAAQ,CAACC,IAAT,+CAEgBF,QAAQ,CAACG,CAAD,CAAR,CAAYC,EAF5B,4BAGQJ,QAAQ,CAACG,CAAD,CAAR,CAAYE,KAHpB,eAG8BL,QAAQ,CAACG,CAAD,CAAR,CAAYG,cAH1C;AAOH;;AAEDL,EAAAA,QAAQ,CAACC,IAAT,CAAc,OAAd;AAEAlB,EAAAA,SAAS,CAACuB,SAAV,GAAsBN,QAAQ,CAACO,IAAT,CAAc,EAAd,CAAtB,CAnBoB,CAmBsB;AAEzC;;AAED,IAAMC,EAAE,GAAGxB,QAAQ,CAACK,aAAT,CAAuB,IAAvB,CAAX,EAA4C;;AAE5C,SAASoB,UAAT,GAAsB;AACpB,MAAMN,EAAE,GAAGO,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwB,CAAxB,CAAX;AAEA,MAAMC,WAAW,GAAGrB,OAAO,CAACD,WAAW,CAACuB,OAAZ,CAAoB,KAApB,EAA2BX,EAA3B,CAAD,CAA3B;AAEApB,EAAAA,SAAS,CAACuB,SAAV,uBACQO,WAAW,CAACT,KADpB;AAMD;;AAED,SAASW,MAAT,GAAkB;AAChB,MAAMC,SAAS,GAAGN,QAAQ,CAACC,IAA3B;;AAEA,MAAIK,SAAS,KAAK,EAAlB,EAAsB;AAAI;AACxBjB,IAAAA,QAAQ;AACT,GAFD,MAEO;AACLU,IAAAA,UAAU;AACX;AACF;;AAEDQ,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAsCH,MAAtC;AAEAA,MAAM","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["const container = document.getElementById('root');\r\nconst ajax = new XMLHttpRequest();\r\nconst content = document.createElement('div');\r\nconst NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json';\r\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json';\r\n\r\nfunction getData(url) {     // 중복되는 open, send, JSON.parse을 함수로 묶어 중복 최소화\r\n  ajax.open('GET', url, false);\r\n  ajax.send(); // 데이터 가져오기\r\n\r\n  return JSON.parse(ajax.response);\r\n}\r\n\r\nfunction newsFeed() {\r\n  const newsFeed = getData(NEWS_URL);\r\n  const newsList = [];\r\n\r\n  newsList.push('<ul>');\r\n\r\n  for(let i = 0; i < 10; i++){    // 게시물 10개 가져오기\r\n  // DOM API를 최소화 사용, 문자열을 이용해서 마크업 구조 사용\r\n    newsList.push(`   \r\n      <li>\r\n        <a href=\"#${newsFeed[i].id}\">\r\n          ${newsFeed[i].title} (${newsFeed[i].comments_count})\r\n        </a>\r\n      </li>\r\n    `);\r\n}\r\n\r\nnewsList.push('</ul>');\r\n\r\ncontainer.innerHTML = newsList.join('')   // 구분자 없는 join\r\n\r\n}\r\n\r\nconst ul = document.createElement('ul');    // ul 태그 만들기\r\n\r\nfunction newsDetail() {\r\n  const id = location.hash.substring(1)\r\n\r\n  const newsContent = getData(CONTENT_URL.replace('@id', id));\r\n\r\n  container.innerHTML = `\r\n    <h1>${newsContent.title}</h1>\r\n    <div>\r\n      <a href=\"#\">목록으로</a>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction router() {\r\n  const routePath = location.hash;\r\n\r\n  if (routePath === '') {   // location.hash 값이 #이면 참으로 반환\r\n    newsFeed();\r\n  } else {\r\n    newsDetail();\r\n  }\r\n}\r\n\r\nwindow.addEventListener('hashchange', router);\r\n\r\nrouter();\r\n\r\n"]}